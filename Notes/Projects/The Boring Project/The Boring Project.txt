OK the target is to impress some firms.

The title is because I finally one day woke up and was so woke that I realised these things matter and are precisely the useful and valuable skills and knawledge needed to engineer Good performant software for a firm and so that is that rise to that level and get hired. Demonstrate I can do some boring dirty work too on top of very fun algorithmic ideation at a higher level and mix in all of these ideas in the right way soon hopefully be clever and sharp about it all. Many professors are funded to study and focus on precisely the most industry useful stuff after all. This really is the carne meaty meat matter of making the meat appear on my dinner table so I can meet my various means and ends meet meat if you catch my chicken which was to be buttered not choked.

I thought of some ideas for a real time strategy game based around discrete or continuous trading. Foreign exchange. Would be like some underlying mechanisms for producing some visualised values rather than actual numerics just like pleasant line bars perhaps. So one would see a map with nation states and line bars representing a simple sort of relative value valuation for that nation state's primary currency of an issuing bank structure. OK and then the player can watch these ever changing line bars and place trades with the object being to grow assets as quickly as possible or perhaps hit a certain target As Soon As Possible. In any case it would kind of depend what sorts of underlying processes could occur or whether or not there could be power dynamics involved with new nation states and like ongoing histories and what the player gets to observe. This game could be half fun and interesting I mean especially if even if it simple mechanics the player maybe after hour 4 observes something about how precise correlations and anti correlations are often prone to coming down and degenerating over time etc. etc.

But then I realised that I really just need to demonstrate some Object Oriented Programming, Architecture, C, Python, etc. a variety of principles and strong implementations of some canonical algorithms in Parallel perhaps would really make me look stronger as a candidate even if there is very minimal interesting ideation involved as that can be found in Thoughts.tex in my Github under Lazar, Notes, Thoughts.